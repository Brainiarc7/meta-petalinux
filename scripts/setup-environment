#!/bin/bash
#
# Configure a Yocto build, generating necessary configuration files as needed.
# This script is meant to be sourced from the build directory, i.e.:
#
#   cd /path/to/build/directory
#   source /path/to/sources/meta-petalinux/scripts/setup-environment [OPTION=<value> ...]
#
# This script takes optional configuration items, which override values in the
# generated local.conf.

if [ -n "$BASH_SOURCE" ]; then
  SCRIPT_DIR=$(dirname $BASH_SOURCE)
elif [ -n "$ZSH_NAME" ]; then
  SCRIPT_DIR=$(dirname $0)
else
  SCRIPT_DIR=$(pwd)
fi

if [ -z "$ZSH_NAME" ] && [ "$0" = "$SCRIPT_DIR/setup-environment" ]; then
  echo "Error: This script needs to be sourced. Please run as '. $SCRIPT_DIR/setup.sh'" >&2
else
  # Make $SOURCES absolute
  SOURCES=$(readlink -f "$SCRIPT_DIR/../..")
  BUILD=$(pwd)

  mkdir -p "$BUILD/conf"
  echo "meta-petalinux/conf" > "$BUILD/conf/templateconf.cfg"
  source $SOURCES/oe-init-build-env $BUILD

  # replace local.conf variables
  repl=()
  for var in "$@"; do
    val=$(echo $var | sed 's:^[^=]*=::g')
    var=$(echo $var | sed 's:=.*$::g')
    repl=("${repl[@]}" "-e" "s!^[#\s]*\\<$var\\>\s*[?=]*.*\$!$var = \"$val\"!g")
  done
  if [ "${#repl[@]}" -ne 0 ]; then
    sed -i "${repl[@]}" "$BUILD/conf/local.conf"
  fi
fi  # sourced
